# UserCenter Project Context

You are working on **UserCenter**, a production-ready Go user management service built with clean architecture principles.

## 🏗️ Core Architecture
- **Language**: Go 1.21+
- **Framework**: Gin web framework  
- **Database**: PostgreSQL (primary), MongoDB (auxiliary), Redis (cache)
- **Authentication**: JWT-based with bcrypt password hashing
- **Dependency Injection**: Wire framework
- **Documentation**: Swagger/OpenAPI

## 📁 Project Structure
```
cmd/usercenter/          # Application entry point
internal/
  ├── config/            # Configuration management
  ├── model/             # Domain entities (GORM models)
  ├── dto/               # Data transfer objects
  ├── service/           # Business logic layer
  ├── repository/        # Data access layer
  ├── handler/           # HTTP handlers (controllers)
  ├── middleware/        # HTTP middleware
  ├── server/            # Server setup and routing
  └── database/          # Database connections
pkg/                     # Shared packages
configs/                 # Configuration files
```

## 🎯 Key Features
- User CRUD operations with validation
- JWT authentication and authorization
- Rate limiting (general, login, registration)
- Health checks for all dependencies
- Request ID tracking
- Graceful shutdown
- CORS support
- Comprehensive logging with Zap

## 📋 Development Standards
- Follow Go standard project layout
- Use dependency injection for testability
- Implement proper error handling
- Include comprehensive Swagger documentation
- Maintain high test coverage (80%+)
- Follow RESTful API conventions

## 🔧 Development Workflow
- Dependencies: `docker-compose up -d`
- Application: `make run-dev` or `./bin/usercenter`
- Environment: Use `.env` file for automatic variable loading
- Hot reload: Code changes trigger automatic rebuild

## 🌐 Environment Variables
Required for local development:
- `USERCENTER_DATABASE_POSTGRES_HOST=localhost`
- `USERCENTER_DATABASE_POSTGRES_PORT=5432`
- `USERCENTER_DATABASE_POSTGRES_USER=postgres`
- `USERCENTER_DATABASE_POSTGRES_PASSWORD=password`
- `USERCENTER_DATABASE_POSTGRES_DBNAME=usercenter`
- `USERCENTER_DATABASE_POSTGRES_SSLMODE=disable`
